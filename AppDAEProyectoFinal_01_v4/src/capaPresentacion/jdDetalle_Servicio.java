/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package capaPresentacion;

import soporte.*;
import capaNegocio.*;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author franc
 */
public class jdDetalle_Servicio extends javax.swing.JDialog {
    clsDetalle_Servicio objTabla = new clsDetalle_Servicio();
    clsServicio objServicio = new clsServicio();
    clsMedico objMedico = new clsMedico();
    
    private final String columnName_IDServicio = "ID Servicio";
    private final String columnName_NombreServicio = "Servicio Disponible";
    private final String columnName_CostoServicio = "Costo";
    private final String columnName_DisponibilidadDetServicio = "Disp. Asignacion";
    
    /**
     * Creates new form jdDetalle_Servicio
     */
    public jdDetalle_Servicio(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        txtID.setText(jdMantMedico.id_medico_asignacion);
        btnDisponibilidad.setText(Utilidad.BTN_DISPONIBILIDAD);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblServiciosMedico = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblServiciosDisponibles = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnDisponibilidad = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnBuscarServicioMedico = new javax.swing.JButton();
        btnBuscarServicioDisponible = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtIDServDisponible = new javax.swing.JTextField();
        txtNombreServDisponible = new javax.swing.JTextField();
        txtIDServMedico = new javax.swing.JTextField();
        txtNombreServmedico = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        chkDisponibilidadServicioMedico = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        txtEspecialidad = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDocIdentidad = new javax.swing.JTextField();
        txtNombreCompleto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCantServ = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();
        txtCantServ1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        tblServiciosMedico.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tblServiciosMedico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblServiciosMedico.setToolTipText("");
        tblServiciosMedico.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblServiciosMedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblServiciosMedicoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblServiciosMedico);

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel10.setText("Servicios que realizará o está realizando:");

        tblServiciosDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblServiciosDisponibles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblServiciosDisponiblesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblServiciosDisponibles);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel1.setText("Servicios Disponibles que puede escoger:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conector/Recursos/flecha derecha.png"))); // NOI18N
        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conector/Recursos/flecha izquierda.png"))); // NOI18N
        jButton2.setText("Quitar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnDisponibilidad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conector/Recursos/disponible.png"))); // NOI18N
        btnDisponibilidad.setText("Cambiar Disp");
        btnDisponibilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisponibilidadActionPerformed(evt);
            }
        });

        jLabel5.setText("ID:");

        jLabel6.setText("ID:");

        jLabel8.setText("Nombre:");

        btnBuscarServicioMedico.setText("Buscar");
        btnBuscarServicioMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarServicioMedicoActionPerformed(evt);
            }
        });

        btnBuscarServicioDisponible.setText("Buscar");
        btnBuscarServicioDisponible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarServicioDisponibleActionPerformed(evt);
            }
        });

        jLabel12.setText("Nombre:");

        txtIDServDisponible.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDServDisponibleKeyTyped(evt);
            }
        });

        txtNombreServDisponible.setEditable(false);

        txtIDServMedico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDServMedicoKeyTyped(evt);
            }
        });

        txtNombreServmedico.setEditable(false);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conector/Recursos/guardar.png"))); // NOI18N
        jButton7.setText("Guardar y Salir");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        chkDisponibilidadServicioMedico.setBackground(new java.awt.Color(0, 0, 0));
        chkDisponibilidadServicioMedico.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        chkDisponibilidadServicioMedico.setText("(Disponible)");
        chkDisponibilidadServicioMedico.setContentAreaFilled(false);
        chkDisponibilidadServicioMedico.setEnabled(false);
        chkDisponibilidadServicioMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDisponibilidadServicioMedicoActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel13.setText("Disponibilidad:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIDServDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarServicioDisponible)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombreServDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 2, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel1)))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnDisponibilidad, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIDServMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jLabel10))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarServicioMedico)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombreServmedico, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkDisponibilidadServicioMedico))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel12)
                    .addComponent(txtIDServDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreServDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(chkDisponibilidadServicioMedico)
                    .addComponent(txtNombreServmedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtIDServMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnBuscarServicioDisponible)
                    .addComponent(btnBuscarServicioMedico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(btnDisponibilidad)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );

        jPanel4.setBackground(new java.awt.Color(0, 0, 102));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Asignación de Servicios a Médico");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        txtEspecialidad.setEditable(false);
        txtEspecialidad.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtEspecialidad.setBorder(null);

        txtID.setEditable(false);
        txtID.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtID.setBorder(null);
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel11.setText("ID:");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel7.setText("Especialidad:");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel2.setText("Doc Identidad:");

        txtDocIdentidad.setEditable(false);
        txtDocIdentidad.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtDocIdentidad.setBorder(null);
        txtDocIdentidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDocIdentidadKeyTyped(evt);
            }
        });

        txtNombreCompleto.setEditable(false);
        txtNombreCompleto.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtNombreCompleto.setBorder(null);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setText("Nombre Completo:");

        jLabel4.setText("Cant. Servicios Total");

        txtCantServ.setEditable(false);
        txtCantServ.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtCantServ.setBorder(null);

        btnLimpiar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conector/Recursos/opacado.png"))); // NOI18N
        btnLimpiar.setBorder(null);
        btnLimpiar.setBorderPainted(false);
        btnLimpiar.setContentAreaFilled(false);
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        txtCantServ1.setEditable(false);
        txtCantServ1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtCantServ1.setBorder(null);

        jLabel14.setText("Cant. Servicios Disponibles");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(txtDocIdentidad))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombreCompleto, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(txtEspecialidad))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(53, 53, 53)
                        .addComponent(txtCantServ, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(txtCantServ1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(txtNombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtCantServ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtDocIdentidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCantServ1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblServiciosMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblServiciosMedicoMouseClicked
        // TODO add your handling code here:
        txtIDServMedico.setText(String.valueOf(tblServiciosMedico.getValueAt(tblServiciosMedico.getSelectedRow(), 0)));
        btnBuscarServicioMedicoActionPerformed(null);
    }//GEN-LAST:event_tblServiciosMedicoMouseClicked

    private void txtIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57    ;

        if (!(numeros)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtIDKeyTyped

    private void txtDocIdentidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocIdentidadKeyTyped
        // TODO add your handling code here:
        if(txtDocIdentidad.getText().length() >= 8) {
            evt.consume();
        }

        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57    ;
        //        boolean guion = key == 45;

        if (!(numeros)) {
            evt.consume();
        }

    }//GEN-LAST:event_txtDocIdentidadKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        buscarMedico();
        listarServiciosDisponibles();
        listarServiciosMedico();
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (tblServiciosDisponibles.getSelectedRow() != -1) {
            guardarAsignacion();
            listarServiciosDisponibles();
            listarServiciosMedico();
            limpiarControles();
            buscarMedico();
            buscarMedico();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila de la 1ra tabla para hacer esta operacion");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (tblServiciosMedico.getSelectedRow() != -1) {
            eliminarAsignacion();
            listarServiciosDisponibles();
            listarServiciosMedico();
            limpiarControles();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila de la 2da tabla para hacer esta operacion");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtIDServDisponibleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDServDisponibleKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57    ;

        if (!(numeros)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtIDServDisponibleKeyTyped

    private void txtIDServMedicoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDServMedicoKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57    ;

        if (!(numeros)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtIDServMedicoKeyTyped

    private void btnBuscarServicioDisponibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarServicioDisponibleActionPerformed
        // TODO add your handling code here:
        buscarServicioDisponible();
    }//GEN-LAST:event_btnBuscarServicioDisponibleActionPerformed

    private void tblServiciosDisponiblesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblServiciosDisponiblesMouseClicked
        // TODO add your handling code here:
        txtIDServDisponible.setText(String.valueOf(tblServiciosDisponibles.getValueAt(tblServiciosDisponibles.getSelectedRow(), 0)));
        btnBuscarServicioDisponibleActionPerformed(null); 
    }//GEN-LAST:event_tblServiciosDisponiblesMouseClicked

    private void btnBuscarServicioMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarServicioMedicoActionPerformed
        // TODO add your handling code here:
        buscarServicioMedico();
    }//GEN-LAST:event_btnBuscarServicioMedicoActionPerformed

    private void chkDisponibilidadServicioMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDisponibilidadServicioMedicoActionPerformed
        // TODO add your handling code here:
        boolean valor = chkDisponibilidadServicioMedico.isSelected();
        chkDisponibilidadServicioMedico.setSelected(valor);
    }//GEN-LAST:event_chkDisponibilidadServicioMedicoActionPerformed

    private void btnDisponibilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisponibilidadActionPerformed
        // TODO add your handling code here:
        String id = txtIDServMedico.getText();
        cambiarDisponibilidad();
        txtIDServMedico.setText(id);
        btnBuscarServicioMedicoActionPerformed(null);
    }//GEN-LAST:event_btnDisponibilidadActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiarControles();
        listarServiciosDisponibles();
        listarServiciosMedico();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void listarServiciosDisponibles(){
        ResultSet rsPro = null;
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn(columnName_IDServicio);
        modelo.addColumn(columnName_NombreServicio);
        modelo.addColumn(columnName_CostoServicio);
//        modelo.addColumn("Disp Asignación");
        tblServiciosDisponibles.setModel(modelo);        
        try {
            rsPro = objTabla.listarServiciosDisponiblesRestantesxMedico(Integer.parseInt(txtID.getText()));
            while (rsPro.next()){                
                modelo.addRow(new Object[]{
                    rsPro.getInt(clsServicio.ID)
                    ,rsPro.getString(clsServicio.NOMBRE)
                    ,rsPro.getString(clsServicio.COSTO)
//                    ,frmMenuPrincipal.textoBool(rsPro.getBoolean(clsServicio.DISPONIBILIDAD), Utilidad.DISPONIBILIDAD_SI, Utilidad.DISPONIBILIDAD_NO)
                });
            }
            tblServiciosDisponibles.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al listar tabla "+clsServicio.TABLA+": " + e.getMessage());
        }
    }
   
    private void listarServiciosMedico(){
        ResultSet rsPro = null;
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn(columnName_IDServicio);
        modelo.addColumn(columnName_NombreServicio);
        modelo.addColumn(columnName_CostoServicio);
        modelo.addColumn(columnName_DisponibilidadDetServicio);
        tblServiciosMedico.setModel(modelo);        
        try {
            rsPro = objTabla.listarServiciosxMedico(Integer.parseInt(txtID.getText()));
            while (rsPro.next()){                
                modelo.addRow(new Object[]{
                    rsPro.getInt(clsServicio.ID)
                    ,rsPro.getString(clsServicio.NOMBRE)
                    ,rsPro.getString(clsServicio.COSTO)
                    ,Utilidad.textoBool(rsPro.getBoolean("det_disp"), Utilidad.DISPONIBILIDAD_SI, Utilidad.DISPONIBILIDAD_NO)
                });
            }
            tblServiciosMedico.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al listar tabla "+clsServicio.TABLA+": " + e.getMessage());
        }
    }
   
    private void guardarAsignacion(){
       int fila = tblServiciosDisponibles.getSelectedRow();
       try {
            objTabla.registrarAsignacion(
                    Integer.parseInt(String.valueOf(tblServiciosDisponibles.getValueAt(fila, 0))),
                    Integer.parseInt(txtID.getText())
            );
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane,e.getMessage());
        }
    }
   
    private void eliminarAsignacion(){
       int fila = tblServiciosMedico.getSelectedRow();
       try {
            objTabla.eliminarAsignacion(
                    Integer.parseInt(String.valueOf(tblServiciosMedico.getValueAt(fila, 0))),
                    Integer.parseInt(txtID.getText())
            );
        } catch (Exception e) {
            if (e.getMessage().contains("referida desde la tabla")) {
                JOptionPane.showMessageDialog(this, "Error: Hay datos externos asociados al servicio \"" + txtNombreServmedico.getText() + "\" que reliza el medico \""+txtNombreCompleto.getText()+"\". \n"
                        + "Considere cambiar su disponibilidad para que ya no pueda ser usado");
            } else {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            }
        }
    }
    
    private void buscarMedico() {
        ResultSet rsPro = null;
        try {
            rsPro = objMedico.buscarMedico(Integer.parseInt(txtID.getText()));
            if (rsPro.next()){
                txtNombreCompleto.setText(rsPro.getString(clsMedico.NOMBRES)+" "+rsPro.getString(clsMedico.APE_PATERNO)+" "+rsPro.getString(clsMedico.APE_MATERNO));
                txtDocIdentidad.setText(rsPro.getString(clsMedico.DOC_IDENTIDAD));
                txtEspecialidad.setText(rsPro.getString(clsEspecialidad.NOMBRE));
                txtCantServ.setText(rsPro.getString(clsMedico.CANT_SERVICIOS));
                rsPro.close();
            } else {
                JOptionPane.showMessageDialog(this, "Este codigo de "+clsMedico.TABLA+" no existe");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error:" + e.getMessage());
        }
    }
    
    private void limpiarControles() {
        txtIDServDisponible.setText("");
        txtIDServMedico.setText("");
        txtNombreServDisponible.setText("");
        txtNombreServmedico.setText("");
        chkDisponibilidadServicioMedico.setSelected(false);
        
//        txtIDServDisponible.requestFocus();        
    }
    
    private void buscarServicioDisponible() {
        ResultSet rsData = null;
        try {
            if (txtIDServDisponible.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Debe ingresar una ID para buscar");
            } else {
                
                for (int i = 0; i < tblServiciosDisponibles.getRowCount(); i++) {
                    String valorCodigo = tblServiciosDisponibles.getValueAt(i, 0).toString();
                    if (valorCodigo.equals(txtIDServDisponible.getText())) {
                        tblServiciosDisponibles.setRowSelectionInterval(i, i);
                        tblServiciosDisponibles.scrollRectToVisible(tblServiciosDisponibles.getCellRect(i, 0, true));
                        break;
                    }
                }
                
                rsData = objTabla.buscarServiciosDisponiblesRestantesxMedico(Integer.parseInt(txtID.getText()),Integer.parseInt(txtIDServDisponible.getText()));
                if (rsData.next()){
                    txtNombreServDisponible.setText(rsData.getString(clsServicio.NOMBRE));
                    rsData.close();
                } else {
                    JOptionPane.showMessageDialog(this, "Este codigo no existe o no se encuentra en esta tabla");
                    limpiarControles();
                    listarServiciosDisponibles();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error:" + e.getMessage());
            listarServiciosDisponibles();
            limpiarControles();
        }
    }
    
    private void buscarServicioMedico() {
        ResultSet rsData = null;
        try {
            if (txtIDServMedico.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Debe ingresar una ID para buscar");
            } else {
                
                for (int i = 0; i < tblServiciosMedico.getRowCount(); i++) {
                    String valorCodigo = tblServiciosMedico.getValueAt(i, 0).toString();
                    if (valorCodigo.equals(txtIDServMedico.getText())) {
                        tblServiciosMedico.setRowSelectionInterval(i, i);
                        tblServiciosMedico.scrollRectToVisible(tblServiciosMedico.getCellRect(i, 0, true));
                        break;
                    }
                }
                
                rsData = objTabla.buscarServiciosxMedico(Integer.parseInt(txtID.getText()),Integer.parseInt(txtIDServMedico.getText()));
                if (rsData.next()){
                    txtNombreServmedico.setText(rsData.getString(clsServicio.NOMBRE));
                    chkDisponibilidadServicioMedico.setSelected(rsData.getBoolean("det_disp"));
                    rsData.close();
                } else {
                    JOptionPane.showMessageDialog(this, "Este codigo no existe o no se encuentra en esta tabla");
                    limpiarControles();
                    listarServiciosDisponibles();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error:" + e.getMessage());
            listarServiciosDisponibles();
            limpiarControles();
        }
    }
    
    private void cambiarDisponibilidad() {
        try {
            ResultSet rsCateg = null;
            if (txtID.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Debe ingresar un codigo");
            } else {
                int valor = JOptionPane.showConfirmDialog(null, "¿Deseas cambiar la Disponibilidad de la asignación del servicio "+txtNombreServmedico.getText()+" con el medico "+txtNombreCompleto.getText()+"?", "Confirmacion",JOptionPane.YES_NO_OPTION);
                if (valor == JOptionPane.YES_OPTION) {
                    objTabla.cambiarDisponibilidad(Integer.parseInt(txtID.getText()),Integer.parseInt(txtIDServMedico.getText()));
                    limpiarControles();
                    listarServiciosMedico();
                    JOptionPane.showMessageDialog(this, "Se modificó la Disponibilidad de este médico con exito");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarServicioDisponible;
    private javax.swing.JButton btnBuscarServicioMedico;
    private javax.swing.JButton btnDisponibilidad;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JCheckBox chkDisponibilidadServicioMedico;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblServiciosDisponibles;
    private javax.swing.JTable tblServiciosMedico;
    private javax.swing.JTextField txtCantServ;
    private javax.swing.JTextField txtCantServ1;
    private javax.swing.JTextField txtDocIdentidad;
    private javax.swing.JTextField txtEspecialidad;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIDServDisponible;
    private javax.swing.JTextField txtIDServMedico;
    private javax.swing.JTextField txtNombreCompleto;
    private javax.swing.JTextField txtNombreServDisponible;
    private javax.swing.JTextField txtNombreServmedico;
    // End of variables declaration//GEN-END:variables
}
